; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa --amdgpu-disable-packed-fp32=0 -mcpu=gfx950 < %s | FileCheck -enable-var-scope -check-prefixes=PACKED,PACKED-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa --amdgpu-disable-packed-fp32=0 -mcpu=gfx950 < %s | FileCheck -enable-var-scope -check-prefixes=PACKED,PACKED-GISEL %s
; RUN: llc -global-isel=0 -mtriple=amdgcn-amd-amdhsa --amdgpu-disable-packed-fp32=1 -mcpu=gfx950 < %s | FileCheck -enable-var-scope -check-prefixes=UNPACKED,UNPACKED-SDAG %s
; RUN: llc -global-isel=1 -mtriple=amdgcn-amd-amdhsa --amdgpu-disable-packed-fp32=1 -mcpu=gfx950 < %s | FileCheck -enable-var-scope -check-prefixes=UNPACKED,UNPACKED-GISEL %s

define hidden void @vectorMul(ptr %in, ptr %out) {
; PACKED-LABEL: vectorMul:
; PACKED:       ; %bb.0:
; PACKED-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PACKED-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    v_pk_mul_f32 v[0:1], v[0:1], v[0:1]
; PACKED-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-SDAG-LABEL: vectorMul:
; UNPACKED-SDAG:       ; %bb.0:
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    v_mul_f32_e32 v1, v1, v1
; UNPACKED-SDAG-NEXT:    v_mul_f32_e32 v0, v0, v0
; UNPACKED-SDAG-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-GISEL-LABEL: vectorMul:
; UNPACKED-GISEL:       ; %bb.0:
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    v_mul_f32_e32 v0, v0, v0
; UNPACKED-GISEL-NEXT:    v_mul_f32_e32 v1, v1, v1
; UNPACKED-GISEL-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %op0 = load <2 x float>, ptr %in, align 8
  %gep1 = getelementptr ptr, ptr %in, i32 8
  %op1 = load <2 x float>, ptr %in, align 8
  %data = fmul contract <2 x float> %op0, %op1
  store <2 x float> %data, ptr %out
  ret void
}

define hidden void @vectorAdd(ptr %in, ptr %out) {
; PACKED-LABEL: vectorAdd:
; PACKED:       ; %bb.0:
; PACKED-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PACKED-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    v_pk_add_f32 v[0:1], v[0:1], v[0:1]
; PACKED-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-SDAG-LABEL: vectorAdd:
; UNPACKED-SDAG:       ; %bb.0:
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    v_add_f32_e32 v1, v1, v1
; UNPACKED-SDAG-NEXT:    v_add_f32_e32 v0, v0, v0
; UNPACKED-SDAG-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-GISEL-LABEL: vectorAdd:
; UNPACKED-GISEL:       ; %bb.0:
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    v_add_f32_e32 v0, v0, v0
; UNPACKED-GISEL-NEXT:    v_add_f32_e32 v1, v1, v1
; UNPACKED-GISEL-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %op0 = load <2 x float>, ptr %in, align 8
  %gep1 = getelementptr ptr, ptr %in, i32 8
  %op1 = load <2 x float>, ptr %in, align 8
  %data = fadd contract <2 x float> %op0, %op1
  store <2 x float> %data, ptr %out
  ret void
}

define hidden void @vectorFma(ptr %in, ptr %out) {
; PACKED-LABEL: vectorFma:
; PACKED:       ; %bb.0:
; PACKED-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PACKED-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    v_pk_fma_f32 v[0:1], v[0:1], v[0:1], v[0:1]
; PACKED-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; PACKED-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-SDAG-LABEL: vectorFma:
; UNPACKED-SDAG:       ; %bb.0:
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    v_fma_f32 v1, v1, v1, v1
; UNPACKED-SDAG-NEXT:    v_fmac_f32_e32 v0, v0, v0
; UNPACKED-SDAG-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-GISEL-LABEL: vectorFma:
; UNPACKED-GISEL:       ; %bb.0:
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    v_fma_f32 v0, v0, v0, v0
; UNPACKED-GISEL-NEXT:    v_fmac_f32_e32 v1, v1, v1
; UNPACKED-GISEL-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %op0 = load <2 x float>, ptr %in, align 8
  %gep1 = getelementptr ptr, ptr %in, i32 8
  %op1 = load <2 x float>, ptr %in, align 8
  %data = tail call <2 x float> @llvm.fma.v2f32(<2 x float> %op0, <2 x float> %op1, <2 x float> %op0)
  store <2 x float> %data, ptr %out
  ret void
}

define hidden void @vectorSub(ptr %in, ptr %out) {
; PACKED-SDAG-LABEL: vectorSub:
; PACKED-SDAG:       ; %bb.0:
; PACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PACKED-SDAG-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; PACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-SDAG-NEXT:    v_pk_add_f32 v[0:1], v[0:1], v[0:1] neg_lo:[0,1] neg_hi:[0,1]
; PACKED-SDAG-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; PACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; PACKED-GISEL-LABEL: vectorSub:
; PACKED-GISEL:       ; %bb.0:
; PACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; PACKED-GISEL-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; PACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-GISEL-NEXT:    v_sub_f32_e32 v0, v0, v0
; PACKED-GISEL-NEXT:    v_sub_f32_e32 v1, v1, v1
; PACKED-GISEL-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; PACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; PACKED-GISEL-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-SDAG-LABEL: vectorSub:
; UNPACKED-SDAG:       ; %bb.0:
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    v_sub_f32_e32 v1, v1, v1
; UNPACKED-SDAG-NEXT:    v_sub_f32_e32 v0, v0, v0
; UNPACKED-SDAG-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-SDAG-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-SDAG-NEXT:    s_setpc_b64 s[30:31]
;
; UNPACKED-GISEL-LABEL: vectorSub:
; UNPACKED-GISEL:       ; %bb.0:
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) expcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    flat_load_dwordx2 v[0:1], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    v_sub_f32_e32 v0, v0, v0
; UNPACKED-GISEL-NEXT:    v_sub_f32_e32 v1, v1, v1
; UNPACKED-GISEL-NEXT:    flat_store_dwordx2 v[2:3], v[0:1]
; UNPACKED-GISEL-NEXT:    s_waitcnt vmcnt(0) lgkmcnt(0)
; UNPACKED-GISEL-NEXT:    s_setpc_b64 s[30:31]
  %op0 = load <2 x float>, ptr %in, align 8
  %gep1 = getelementptr ptr, ptr %in, i32 8
  %op1 = load <2 x float>, ptr %in, align 8
  %data = fsub contract <2 x float> %op0, %op1
  store <2 x float> %data, ptr %out
  ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; UNPACKED: {{.*}}
